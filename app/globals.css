@import "tailwindcss";

/* ===== Base ===== */
@layer base {

  html,
  body {
    min-height: 100dvh;
  }

  body {
    background: #000;
    color: #e5e7eb;
    -webkit-font-smoothing: antialiased;
  }

  * {
    -webkit-tap-highlight-color: transparent;
  }
}

/* ===== Fundo dark + amarelo (com aurora + grid) ===== */
.bg-amber-neo {
  position: relative;
  background:
    radial-gradient(1200px 600px at 12% 18%, rgba(250, 204, 21, .14), transparent 60%),
    radial-gradient(900px 520px at 85% 78%, rgba(234, 179, 8, .12), transparent 60%),
    radial-gradient(700px 420px at 50% 0%, rgba(253, 224, 71, .06), transparent 60%),
    #000;
}

.aurora {
  pointer-events: none;
  position: fixed;
  inset: 0;
}

.aurora::before,
.aurora::after {
  content: "";
  position: absolute;
  width: 46vw;
  height: 46vw;
  border-radius: 9999px;
  filter: blur(60px);
  opacity: .16;
  background: conic-gradient(from 0deg, #facc15, #eab308, #f59e0b, #facc15);
  animation: auroraSpin 22s linear infinite;
}

.aurora::before {
  left: -14vw;
  top: -12vw;
}

.aurora::after {
  right: -10vw;
  bottom: -12vw;
  animation-duration: 28s;
  animation-direction: reverse;
}

@keyframes auroraSpin {
  to {
    transform: rotate(360deg);
  }
}

.grid-overlay {
  pointer-events: none;
  position: fixed;
  inset: 0;
  background-image:
    linear-gradient(to right, rgba(255, 255, 255, .035) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(255, 255, 255, .035) 1px, transparent 1px);
  background-size: 26px 26px;
  mask-image: radial-gradient(circle at 50% 42%, black 55%, transparent 100%);
  animation: grid-pan 42s linear infinite;
}

@keyframes grid-pan {
  0% {
    background-position: 0 0, 0 0
  }

  100% {
    background-position: 260px 260px, 260px 260px
  }
}

.vignette {
  pointer-events: none;
  position: fixed;
  inset: 0;
  box-shadow: inset 0 0 220px rgba(0, 0, 0, .65);
}

/* ===== Container util ===== */
.neo-container {
  width: 100%;
  max-width: 1200px;
  /* mais controlado para não “quebrar” */
  margin-inline: auto;
  padding-inline: 1rem;
  /* sm/md/lg ajustados no layout.tsx */
}

/* ===== Card glass ===== */
.neo-card {
  border-radius: 1.35rem;
  background: rgba(18, 18, 22, .58);
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  border: 1px solid transparent;
  background-image:
    linear-gradient(rgba(18, 18, 22, .58), rgba(18, 18, 22, .58)),
    linear-gradient(90deg, rgba(250, 204, 21, .55), rgba(234, 179, 8, .55));
  background-origin: border-box;
  background-clip: padding-box, border-box;
  box-shadow: 0 18px 50px rgba(0, 0, 0, .45);
}

/* ===== Inputs / Botões ===== */
.input {
  width: 100%;
  height: 44px;
  padding: 0 1rem;
  font-size: .95rem;
  border-radius: .9rem;
  transition: box-shadow .2s, border-color .2s;
  background: rgba(255, 255, 255, .05);
  border: 1px solid rgba(255, 255, 255, .14);
  color: #e5e7eb;
}

.input::placeholder {
  color: #9ca3af;
}

.input:focus {
  outline: none;
  border-color: rgba(250, 204, 21, .7);
  box-shadow: 0 0 0 4px rgba(250, 204, 21, .22);
}

.btn-amber {
  width: 100%;
  height: 44px;
  border-radius: .9rem;
  font-weight: 700;
  background: linear-gradient(90deg, #facc15 0%, #eab308 100%);
  color: #0b1220;
  transition: transform .15s, filter .15s;
}

.btn-amber:hover {
  filter: brightness(1.06);
  transform: translateY(-1px);
}

.btn-amber:active {
  transform: translateY(0);
}

.h1-grad {
  background: linear-gradient(90deg, #fef08a, #fde68a);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}

.text-muted {
  color: #9ca3af;
}

/* Select (glass) */
select {
  appearance: none;
  background-color: rgba(255, 255, 255, .05);
  color: #f5f5f5;
  border: 1px solid rgba(255, 255, 255, .1);
  border-radius: 8px;
  padding: 10px 36px 10px 12px;
  font-size: 14px;
  transition: border .2s, background-color .2s;
  background-image: url("data:image/svg+xml;utf8,<svg fill='rgb(250,204,21)' height='24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/></svg>");
  background-repeat: no-repeat;
  background-position: right 10px center;
  background-size: 16px 16px;
}

select:hover {
  background-color: rgba(255, 255, 255, .08);
  border-color: rgba(250, 204, 21, .4);
}

select:focus {
  outline: none;
  border-color: rgba(250, 204, 21, .7);
  background-color: rgba(255, 255, 255, .1);
}

/* ===== Login (logo) ===== */
.logo-hero {
  position: relative;
  width: clamp(180px, 28vw, 240px);
  height: clamp(180px, 28vw, 240px);
  margin-inline: auto;
  filter: drop-shadow(0 18px 38px rgba(250, 204, 21, .35));
}

.logo-hero .core {
  position: absolute;
  inset: 16px;
  border-radius: 9999px;
  overflow: hidden;
  display: grid;
  place-items: center;
  background: radial-gradient(closest-side, rgba(250, 204, 21, .22), rgba(250, 204, 21, .05) 60%, transparent 70%);
  border: 1px solid rgba(250, 204, 21, .25);
}

.logo-hero .core img {
  width: 78%;
  height: 78%;
  object-fit: contain;
}

.logo-hero .ring-holo {
  position: absolute;
  inset: 0;
  border-radius: 9999px;
  background: conic-gradient(from 0deg, rgba(250, 204, 21, .85), rgba(234, 179, 8, .35), rgba(250, 204, 21, .85));
  -webkit-mask: radial-gradient(closest-side, transparent 65%, black 66%);
  mask: radial-gradient(closest-side, transparent 65%, black 66%);
  filter: blur(2px);
  animation: spin 10s linear infinite;
  opacity: .6;
}

.logo-hero .ring-dash {
  position: absolute;
  inset: 10px;
  border-radius: 9999px;
  border: 2px dashed rgba(250, 204, 21, .45);
  box-shadow: 0 0 30px rgba(250, 204, 21, .18) inset;
  animation: spinReverse 18s linear infinite;
  opacity: .9;
}

.logo-hero .scan {
  position: absolute;
  inset: 16px;
  border-radius: 9999px;
  background: linear-gradient(180deg, transparent 0%, rgba(255, 255, 255, .12) 50%, transparent 100%);
  mix-blend-mode: screen;
  filter: blur(4px);
  animation: scanMove 3.8s ease-in-out infinite;
  opacity: .25;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes spinReverse {
  to {
    transform: rotate(-360deg);
  }
}

@keyframes scanMove {

  0%,
  100% {
    transform: translateY(-65%);
  }

  50% {
    transform: translateY(65%);
  }
}